---
title: "Närsamhälle"
title-block-banner: "#009ca6"
title-block-banner-color: "#FFFFFF"
author:
  name: Magnus Johansson
  affiliation: RISE Research Institutes of Sweden
  affiliation-url: https://ri.se/shic
  orcid: 0000-0003-1669-592X
date: '2022-12-01'
format: 
  html:
    toc: true
    toc-depth: 3
    toc-title: "Innehållsförteckning"
    embed-resources: true
    standalone: true
    page-layout: full
    logo: rise_logo_quarto.png
    mainfont: 'Lato'
    monofont: 'Roboto Mono'
    code-overflow: wrap
    code-tools: true
    code-fold: false
    number-sections: true
    #fig-dpi: 96
    layout-align: left
    linestretch: 1.6
    theme: materia
  pdf:
    papersize: a4
    documentclass: article #article, report or book
    classoption: [twocolumn, portrait]
  revealjs:
    theme: default
    logo: rise_logo_quarto.png
    chalkboard: false
    self-contained: true
#    footer: 'Material skapat av magnus.p.johansson@ri.se'
    mainfont: 'Lato'
    slide-level: 4
    scrollable: true
    smaller: false
execute:
  echo: false
  warning: false
  message: false
  cache: true
editor_options: 
  markdown: 
    wrap: 72
  chunk_output_type: inline
bibliography: grateful-refs.bib
---
```{r}
#| label: recoderawdata
#| include: false

##### Närsamhälle omkodning
#Frågorna heter f101a till f101l i datafilen och 103 i PDF-filen.
# samt F100 i datafilen som är 102 i PDF-filen.

# hög poäng = hög risk
# # definiera svarskategorierna för att förenkla recode-koden
# smd<-'Stämmer mycket dåligt'
# sgd<-'Stämmer ganska dåligt'
# sgb<-'Stämmer ganska bra'
# smb<-'Stämmer mycket bra'
# vetej<-'Vet inte' # kodas som missing/NA
# mtrygg<-'Mycket trygg'
# gtrygg<-'Ganska trygg'
# gotrygg<-'Ganska otrygg'
# motrygg<-'Mycket otrygg'
# garej1<-'Går ej ut på kvällen av oro för att utsättas för brott' # kodas som missing/NA pga ej användbart i ordinala data. Skulle ev. kunna ses som likvärdigt som Mycket Otrygg, eller som ännu "värre", ordinalt ett steg över.
# garej2<-'Går ej ut på kvällen av andra orsaker' # kodas som missing/NA pga ej användbart i ordinala data
#
# #narsamhalle<-df %>% select(F100,starts_with("f101")) %>% names()
# #write.csv(narsamhalle, file = "ns.csv")
#
# df$F100<-car::recode(df$F100,"mtrygg=0;gtrygg=1;gotrygg=2;motrygg=3;garej1=NA;garej2=NA",as.factor=FALSE)
#
# #nsamh<-df %>% select(starts_with("f101")) %>% names()
# positiva.items <- c("f101b","f101c","f101g","f101h","f101i","f101j","f101k","f101l")
# negativa.items <- c("f101a","f101d","f101e","f101f")
#
# for (i in positiva.items) {
#    df[[i]]<-car::recode(df[[i]],"smb=0;sgb=1;sgd=2;smd=3;vetej=NA",as.factor=FALSE)
# }
#
# for (i in negativa.items) {
#    df[[i]]<-car::recode(df[[i]],"smb=3;sgb=2;sgd=1;smd=0;vetej=NA",as.factor=FALSE)
# }

```

```{r}
#| label: setup
#| code-fold: false
#| include: false

library(arrow)
library(ggrepel)
library(car)
library(grateful) # devtools::install_github("Pakillo/grateful")
library(kableExtra)
library(readxl)
library(tidyverse)
library(eRm)
library(mirt)
library(psych)
library(ggplot2)
library(psychotree)
library(matrixStats)
library(reshape)
library(knitr)
library(cowplot)
library(formattable) 
library(RISEkbmRasch) # devtools::install_github("pgmj/RISEkbmRasch")
library(HH)
library(glue)
library(foreach)

### some commands exist in multiple packages, here we define preferred ones that are frequently used
select <- dplyr::select
count <- dplyr::count
recode <- car::recode
rename <- dplyr::rename

### set up color palette based on RISE guidelines
RISEprimGreen <- "#009ca6"
RISEprimRed <- "#e83c63"
RISEprimYellow <- "#ffe500"
RISEprimGreenMid <- "#8dc8c7"
RISEprimRedMid <- "#f5a9ab"
RISEprimYellowMid <- "#ffee8d"
RISEprimGreenLight <- "#ebf5f0"
RISEprimRedLight <- "#fde8df"
RISEprimYellowLight <- "#fff7dd"
RISEcompPurple <- "#482d55"
RISEcompGreenDark <- "#0e4e65"
RISEgrey1 <- "#f0f0f0"
RISEgrey2 <- "#c8c8c8"
RISEgrey3 <- "#828282"
RISEgrey4 <- "#555555"

# set some colors used later
cutoff_line <- RISEprimRed
dot_color <- "black"
backg_color <- RISEprimGreenLight

# set fontsize for all tables
r.fontsize <- 15

### first we pre-set our chosen cut-off values for some commonly used indices:
msq_min <- 0.7
msq_max <- 1.3
zstd_min <- -2
zstd_max <- 2
loc_dep <- 0.2 # above average residual correlation
dif_dif <- 0.5 # logits difference between groups in average item location (DIF)

### zstd is inflated with large samples (N > 500). Reduce sample size to jz and 
### run analysis yz random samples to get average ZSTD
jz = 300 # number to include in dataset
yz = 10 # number of random samples

# import item information
itemlabels<-read_excel("../../data/NärsamhälleItemlabels.xls")

# read recoded dataset
# df <- read.csv("../../data/NARSAMHALLEalldata.csv")

df.all <- read_parquet("../../data/2022-08-22 sthlmsenkat data.parquet")

df <- df.all %>% 
  select(itemlabels$itemnr,Kön,ARSKURS,ar,SkolSDO)

# create dataframe with 2014 data with all variables (post recode)
df.2014 <- df %>% 
  filter(ar == 2014) %>% 
  na.omit()
df.all.years<-df
df.omit.na <- df.2014
df.omit.na$ar <- NULL

# create DIF variables for gender and grade
dif.gender <- df.omit.na$Kön
df.omit.na$Kön <- NULL
dif.arskurs <- df.omit.na$ARSKURS
df.omit.na$ARSKURS <- NULL
dif.stadsdel <- df.omit.na$SkolSDO
df.omit.na$SkolSDO <- NULL

# prepare for dif between years
df.dif.years <- df.all.years %>% 
  select(!Kön,!ARSKURS,!SkolSDO) %>%
  na.omit()

dif.year <- df.dif.years$ar
df.dif.years$ar <- NULL
# df.dif.years can later be used for DIF analysis of years

positiva.items <- c("f101b","f101c","f101g","f101h","f101i","f101j","f101k","f101l")
negativa.items <- c("f101a","f101d","f101e","f101f")

```

## Frågor om närsamhälle

Frågorna heter F100 och f101a till f101l i datafilen, och överensstämmer med 102 och 103 i PDF-filen.

F100 ställer frågan **"Om du går ut ensam sent en kväll i området där du bor, känner du dig då..."** med svarsalternativen:

- Mycket trygg
- Ganska trygg
- Ganska otrygg
- Mycket otrygg
- Går ej ut på kvällen av oro för att utsättas för brott <--- **kodas som missing/NA pga ej användbart i ordinala data. Skulle ev. kunna ses som likvärdigt som Mycket Otrygg, eller som ännu "värre", ordinalt ett steg över, men det är diskutabelt.**
- Går ej ut på kvällen av andra orsaker <--- **kodas som missing/NA pga ej användbart i ordinala data. Det är alltför oklart vad "andra orsaker" är.**

Ovanstående frågor kodas om till siffror 0-3, där hög siffra är Mycket otrygg.

f101-frågorna föregås av frågan **"Hur väl stämmer följande påståenden in på ditt bostadsområde?"**. Samtliga frågor har samma fyra svarskategorier:

- 'Stämmer mycket dåligt'
- 'Stämmer ganska dåligt'
- 'Stämmer ganska bra'
- 'Stämmer mycket bra'

Frågorna är blandat negativt och positivt formulerade, och vid omkodning från ovanstående svarskategorier till siffror 0-3 har positiva frågor vänts så att höga värden alltid innebär högre risk.

Nedan återges samtliga item, med grön markering på positiva item.

```{r}
#| label: showitems
#| tbl-cap-location: top
RIcolorlistitems(c(3,4,8:13), RISEprimGreenMid)
```

Två index har bildats utifrån f101-frågorna, och vi kommer att titta på dessa separat.

**Grad av ordningsproblem i bostadsområdet**

- 101a Vandalism är vanligt i bostadsområdet
- 101d Det finns personer som säljer narkotika i bostadsområdet
- 101e På vardagskvällarna finns det många berusade utomhus
- 101g Det är ovanligt med våldsbrott i det här bostadsområdet

**Grad av informell social kontroll i bostadsområdet**

- F101 b Om en vuxen såg mig göra något olagligt i mitt bostadsområde skulle nog mina föräldrar få reda på det
- F101 c Vuxna skulle ingripa om någon helt öppet försökte sälja narkotika till ungdomar
- F101 h Vuxna skulle ingripa om det blev ett slagsmål framför mitt hus
- F101 i Om jag blev rånad på en allmän plats skulle vuxna ingripa

```{r}
items.ordning <- c("f101a","f101d","f101e","f101g")
items.kontroll <- c("f101b","f101c","f101h","f101i")
```

## Deskriptiva data

### Demografi
```{r}
#| label: descriptives1
#| layout-ncol: 3
RIdemographics(dif.gender, "Kön")
RIdemographics(dif.arskurs, "Årskurs")
#RIdemographics(dif.stadsdel, "Stadsdel")
```
### Item-data

:::: column-page-inset-left
::: panel-tabset
#### Tile plot
```{r}
#| label: descriptives2
RItileplot(df.omit.na)
```
#### Stacked bars
```{r}
#| label: stack1
RIbarstack(df.omit.na)
```
#### Barplots {.scrollable}
```{r}
#| label: alt-descriptives
#| layout-ncol: 2
RIbarplot(df.omit.na)
```
:::
::::

```{r}
#| label: setup2

df.ordning <- df.omit.na %>% 
  select(any_of(items.ordning))

df.kontroll <- df.omit.na %>% 
  select(any_of(items.kontroll))

```


## Ordningsproblem

```{r}
#| column: margin
RIlistItemsMargin(df.ordning, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df.ordning, 300, 32, 8)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.ordning)
```
### Loadings 1st contrast
```{r}
RIloadLoc(df.ordning)
```
### Residualkorrelationer
```{r}
RIresidcorr(df.ordning, cutoff = 0.2)
```
### Targeting
```{r}
#| fig-height: 4
RItargeting(df.ordning)
```
### Itemhierarki
```{r}
#| fig-height: 4
RIitemHierarchy(df.ordning)
```
### Svarskategorier
```{r}
#| include: false
mirt.rasch <- mirt(df.ordning, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
plot(mirt.rasch, type="trace")
```
:::
::::

Det är tydligt att f101g inte passar i ett index med övriga tre items. Vi ser både hög item fit och att faktorladdningen på första kontrasten skiljer sig markant. Övriga tre items har residualkorrelationer sinsemellan.

Svarskategorierna för items a och e fungerar acceptabelt, medan d och g behöver åtgärdas genom att mittenkategorierna slås samman.

Vi tar bort f101g och åtgärdar svarskategorierna för f101d.

```{r}
df.ordning$f101g <- NULL

df.ordning$f101d<-car::recode(df.ordning$f101d,"2=1;3=2",as.factor=FALSE)

```

## Ordning 2

```{r}
#| column: margin
RIlistItemsMargin(df.kontroll, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df.ordning, 300, 32, 8)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.ordning)
```
### Loadings 1st contrast
```{r}
RIloadLoc(df.ordning)
```
### Residualkorrelationer
```{r}
RIresidcorr(df.ordning, cutoff = 0.2)
```
### Targeting
```{r}
#| fig-height: 4
RItargeting(df.ordning)
```
### Itemhierarki
```{r}
#| fig-height: 4
RIitemHierarchy(df.ordning)
```
:::
::::

Något låg item fit och dålig targeting, men i övrigt acceptabelt.

### Reliabilitet
```{r}
RItif(df.ordning)
```

Mycket låg reliabilitet.

## Grad av social kontroll

```{r}
#| column: margin
RIlistItemsMargin(df.kontroll, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df.kontroll, 300, 32, 8)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.kontroll)
```
### Loadings 1st contrast
```{r}
RIloadLoc(df.kontroll)
```
### Residualkorrelationer
```{r}
RIresidcorr(df.kontroll, cutoff = 0.2)
```
### Targeting
```{r}
#| fig-height: 4
RItargeting(df.kontroll)
```
### Itemhierarki
```{r}
#| fig-height: 4
RIitemHierarchy(df.kontroll)
```
### Svarskategorier
```{r}
#| include: false
mirt.rasch <- mirt(df.kontroll, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
plot(mirt.rasch, type="trace")
```
:::
::::


Items f101h och i korrelerar för starkt med varandra. Eftersom i har sämre item fit tar vi bort den.

```{r}
df.kontroll$f101i <- NULL
```

```{r}
#| column: margin
RIlistItemsMargin(df.kontroll, fontsize = 13)
```

## Social kontroll 2

:::: column-page-inset-left
::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df.kontroll, 300, 32, 8)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.kontroll)
```
### Loadings 1st contrast
```{r}
RIloadLoc(df.kontroll)
```
### Residualkorrelationer
```{r}
RIresidcorr(df.kontroll, cutoff = 0.2)
```
### Targeting
```{r}
#| fig-height: 4
RItargeting(df.kontroll)
```
### Itemhierarki
```{r}
#| fig-height: 4
RIitemHierarchy(df.kontroll)
```
### Reliabilitet
```{r}
RItif(df.kontroll)
```

:::
::::

Item f101c har låg item fit. Reliabiliteten blir låg.


## Samtliga frågor 1

```{r}
#| column: margin
RIlistItemsMargin(df.omit.na, fontsize = 12)
```

:::: column-page-inset-left
::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df.omit.na, 300, 32, 8)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.omit.na)
```
### Loadings 1st contrast
```{r}
RIloadLoc(df.omit.na)
```
### Residualkorrelationer
```{r}
RIresidcorr(df.omit.na, cutoff = 0.2)
```
### Targeting
```{r}
#| fig-height: 7
RItargeting(df.omit.na)
```
### Itemhierarki
```{r}
#| fig-height: 7
RIitemHierarchy(df.omit.na)
```
### Svarskategorier
```{r}
#| include: false
mirt.rasch <- mirt(df.omit.na, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
plot(mirt.rasch, type="trace")
```
:::
::::

Vi kan se två kluster i data, utifrån "Loadings 1st contrast" (till vänster och höger om den vertikala röda linjen), som kommer analyseras separat.

Ena klustret är snarlikt "grad av ordning", fast med 101f i stället för 101g, och tillägg av F100.

Många items har problem med svarskategorier, men vi avvaktar med att åtgärda detta tills vi delat på items utifrån klustren.

```{r}
#| label: setup3

items.ordning2 <- c("f101a","f101d","f101e","f101f","F100")

df.ordning2 <- df.omit.na %>% 
  select(any_of(items.ordning2))

df.other <- df.omit.na %>% 
  select(!any_of(items.ordning2))
```


## Ordning variant 1

### Svarskategorier

```{r}
#| label: ordning02.cat
#| layout-ncol: 2

df.erm <- PCM(df.ordning2)
plotICC(df.erm)
```

Svarskategorierna har i flera fall mycket små skillnader (främst 101f), men enbart f101d kräver åtgärd.

```{r}
df.ordning2$f101d <- recode(df.ordning2$f101d,"2=1;3=2",as.factor=FALSE)
df.erm <- PCM(df.ordning2)
plotICC(df.erm, item.subset = "f101d")
```



Precis som innan korrelerar 101d starkt med med a och e, så den behöver tas bort. Targeting indikerar att 101f har oordnade svarskategorier, så dessa behöver slås samman.

### Rasch-analys 1

```{r}
#| column: margin
RIlistItemsMargin(df.ordning2, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
#### Item fit
```{r}
RIitemfitPCM2(df.ordning2, 300, 32, 8)
```
#### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.ordning2)
```
#### Loadings 1st contrast
```{r}
RIloadLoc(df.ordning2)
```
#### Residualkorrelationer
```{r}
RIresidcorr(df.ordning2, cutoff = 0.2)
```
#### Targeting
```{r}
#| fig-height: 5
RItargeting(df.ordning2)
```
#### Itemhierarki
```{r}
#| fig-height: 5
RIitemHierarchy(df.ordning2)
```
:::
::::

Påminner om svarskategorierna för F100, som krävs för att göra frågan begriplig:
- Mycket trygg
- Ganska trygg
- Ganska otrygg
- Mycket otrygg

Figuren för itemhierarki visar konfidensintervall för svarströsklarna. För F100 ser de två högsta trösklarna ut att ligga alltför nära varandra (konfidensintervallen överlappar mer än 25%), vilket i ännu högre grad gäller för f101f.

Item f101d är starkt korrelerad med både a och e. Både f101a och d har låg item fit. Vi tar bort f101d.

```{r}
df.ordning2$f101d <- NULL
```

### Rasch-analys 2

```{r}
#| column: margin
RIlistItemsMargin(df.ordning2, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
#### Item fit
```{r}
RIitemfitPCM2(df.ordning2, 300, 32, 8)
```
#### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.ordning2)
```
#### Loadings 1st contrast
```{r}
RIloadLoc(df.ordning2)
```
#### Residualkorrelationer
```{r}
RIresidcorr(df.ordning2, cutoff = 0.2)
```
#### Targeting
```{r}
#| fig-height: 4
RItargeting(df.ordning2)
```
#### Itemhierarki
```{r}
#| fig-height: 4
RIitemHierarchy(df.ordning2)
```
:::
::::

Korrelationen mellan 101a och e överstiger 0.3 över gränsvärdet. Eftersom f101a har sämst item fit tas den bort. Både f101f och F100 har i denna konstellation ännu större problem med svarströsklarna och de måste åtgärdas, åtminstone för f101f.


### Reliabilitet

Efter borttagande av f101a och åtgärdade svarströsklar för f101f (sammanslagning av de två högsta).
```{r}
df.ordning2$f101a <- NULL
df.ordning2$f101f <- recode(df.ordning2$f101f,"3=2", as.factor = F)
RItif(df.ordning2)
```

Även denna sammansättning frågor har i slutänden för låg reliabilitet.

## Övriga frågor

### Rasch-analys 1

```{r}
#| column: margin
RIlistItemsMargin(df.other, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
#### Item fit
```{r}
RIitemfitPCM2(df.other, 350, 32, 8)
```
#### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.other)
```
#### Loadings 1st contrast
```{r}
RIloadLoc(df.other)
```
#### Residualkorrelationer
```{r}
RIresidcorr(df.other, cutoff = 0.2)
```
#### Targeting
```{r}
#| fig-height: 6
RItargeting(df.other)
```
#### Itemhierarki
```{r}
#| fig-height: 6
RIitemHierarchy(df.other)
```
#### Svarskategorier
```{r}
#| include: false
mirt.rasch <- mirt(df.other, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
plot(mirt.rasch, type="trace")
```
:::
::::

Även här sticker f101g ut. Den verkar tillhöra en annan dimension och bör möjligen tas bort, men först behöver andra saker åtgärdas.

Många items har problem med svarskategorier och residualkorrelationer.

Item-par med problematiska korrelationsnivåer. Största korrelationerna är mellan

- k och l
- h och i

Vi tar bort k (korrelerar med två item, plus dålig targeting) och h (sämre targeting och separation av svarströsklar).

```{r}

df.other$f101k <- NULL
df.other$f101h <- NULL
```

### Rasch-analys 2

```{r}
#| column: margin
RIlistItemsMargin(df.other, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
#### Item fit
```{r}
RIitemfitPCM2(df.other, 320, 32, 8)
```
#### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.other)
```
#### Loadings 1st contrast
```{r}
RIloadLoc(df.other)
```
#### Residualkorrelationer
```{r}
#| cache: false

RIresidcorr(df.other, cutoff = 0.2)
```
#### Targeting
```{r}
#| fig-height: 5

RItargeting(df.other)
```
#### Itemhierarki
```{r}
#| fig-height: 5
RIitemHierarchy(df.other)
```
#### Svarskategorier
```{r}
#| include: false
mirt.rasch <- mirt(df.other, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
plot(mirt.rasch, type="trace")
```
:::
::::

Detta ser bättre ut. Residualkorrelationen som är rödmarkerad är så nära gränsvärdet att vi kan låta den vara. Det enda anmärkningsvärda är 101i med något låg fit, men det får vara acceptabelt.

En fråga har problem med svarskategorier, f101j. De två mittersta svarskategorierna slås samman.

```{r}
df.other$f101j <- recode(df.other$f101j,"2=1;3=2",as.factor = F)
df.erm <- PCM(df.other)
plotICC(df.erm, item.subset = "f101j")
```


### Rasch-analys 3

```{r}
#| column: margin
RIlistItemsMargin(df.other, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
#### Item fit
```{r}
RIitemfitPCM2(df.other, 320, 32, 8)
```
#### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.other)
```
#### Loadings 1st contrast
```{r}
RIloadLoc(df.other)
```
#### Residualkorrelationer
```{r}
#| cache: false

RIresidcorr(df.other, cutoff = 0.2)
```
#### Targeting
```{r}
#| fig-height: 5

RItargeting(df.other)
```
#### Itemhierarki
```{r}
#| fig-height: 5
RIitemHierarchy(df.other)
```
:::
::::


## Invarians/DIF

### Kön

```{r}
#| column: margin
RIlistItemsMargin(df.other, 13)
```

:::: column-page-inset-left
::: panel-tabset
#### Tabell
```{r}
#| fig-height: 3
RIdifTable(df.other, dif.gender)
```
#### Figur
```{r}

RIdifFigure(df.other, dif.gender)
```
:::
::::

Inga problem.

### Årskurs

```{r}
#| column: margin

RIlistItemsMargin(df.other, 13)
```

:::: column-page-inset-left
::: panel-tabset
#### Tabell
```{r}
#| fig-height: 3
RIdifTable(df.other, dif.arskurs)
```
#### Figur
```{r}
RIdifFigure(df.other, dif.arskurs)
```
:::
::::

Inga problem.

### Årtal

```{r}
#| column: margin

RIlistItemsMargin(df.other, 13)
```

:::: column-page-inset-left
::: panel-tabset
#### Tabell
```{r}

final.items <- names(df.other)
df.dif.years <- df.dif.years %>% 
  select(any_of(final.items))

df.dif.years$f101j <- recode(df.dif.years$f101j,"2=1;3=2", as.factor = F)

RIdifTable(df.dif.years, dif.year)
```
#### Figur 1
```{r}
RIdifFigure(df.dif.years, dif.year)
```
#### Figur 2
```{r}
RIdifFigTime(df.dif.years, dif.year)
```
:::
::::

Inga problem.

### Reliabilitet
```{r}
RItif(df.other)
```


## Item-parametrar

```{r}
#| column: margin

RIlistItemsMargin(df.dif.years, 13)
```

```{r}
#| label: itemparams

RIitemparams(df.dif.years)
itemlabels %>% 
  filter(itemnr %in% names(df.dif.years)) %>% 
  write_csv("CommunityItemnr.csv")
```

```{r}
RIscoreSE(df.dif.years)
```

## Person location och infit ZSTD {.smaller}

```{r}
#| label: personfit1

RIpfit(df.other)

```

## Programvara som använts

```{r}
#| label: packagesv
pkgs <- cite_packages(cite.tidyverse = TRUE, 
                      output = "table",
                      bib.file = "grateful-refs.bib",
                      include.RStudio = TRUE)
formattable(pkgs, 
            table.attr = 'class=\"table table-striped\" style="font-size: 14px; font-family: Lato; width: 80%"')
```

## Referenser

