---
title: "Stockholmsenkäten"
subtitle: "Test av potentiellt välbefinnande-index"
title-block-banner: "#009ca6"
author: 
  name: Magnus Johansson
  affiliation: RISE Research Institutes of Sweden
  affiliation-url: https://ri.se/shic
  orcid: 0000-0003-1669-592X
date: '2022-09-21'
format: 
  html:
    toc: true
    embed-resources: true
    logo: rise_logo_quarto.png
    mainfont: 'Lato'
    monofont: 'Roboto Mono'
    code-overflow: wrap
    code-tools: true
    code-fold: true
    number-sections: true
    fig-dpi: 300
  pdf:
    papersize: a4
    documentclass: report #article, report or book
    classoption: [onecolumn, portrait]
  revealjs:
    theme: default
    logo: rise_logo_quarto.png
    chalkboard: true
    embed-resources: false
    footer: 'Material skapat av magnus.p.johansson@ri.se'
    mainfont: 'Lato'
    slide-level: 4
    scrollable: true
    smaller: true
execute:
  echo: false
  warning: false
  message: false
  cache: true
editor_options: 
  markdown: 
    wrap: 72
  chunk_output_type: inline
bibliography: grateful-refs.bib
---

```{r}
#| label: setup
#| include: false

library(arrow)
library(ggrepel)
library(car)
library(ggrepel)
library(grateful)
library(kableExtra)
library(readxl)
library(tidyverse)
library(eRm)
library(mirt)
library(psych)
library(ggplot2)
library(psychotree)
library(matrixStats)
library(reshape)
library(knitr)
library(cowplot)
library(formattable)
library(RISEkbmRasch)

### some commands exist in multiple packages, here we define preferred ones that are frequently used
select <- dplyr::select
count <- dplyr::count
recode <- car::recode
rename <- dplyr::rename

### set up color palette based on RISE guidelines
RISEprimGreen <- "#009ca6"
RISEprimRed <- "#e83c63"
RISEprimYellow <- "#ffe500"
RISEprimGreenMid <- "#8dc8c7"
RISEprimRedMid <- "#f5a9ab"
RISEprimYellowMid <- "#ffee8d"
RISEprimGreenLight <- "#ebf5f0"
RISEprimRedLight <- "#fde8df"
RISEprimYellowLight <- "#fff7dd"
RISEcompPurple <- "#482d55"
RISEcompGreenDark <- "#0e4e65"
RISEgrey1 <- "#f0f0f0"
RISEgrey2 <- "#c8c8c8"
RISEgrey3 <- "#828282"
RISEgrey4 <- "#555555"

# set some colors used later
cutoff_line <- RISEprimRed
dot_color <- "black"
backg_color <- RISEprimGreenLight

# set fontsize for all tables
r.fontsize <- 15

### first we pre-set our chosen cut-off values for some commonly used indices:
msq_min <- 0.7
msq_max <- 1.3
zstd_min <- -2
zstd_max <- 2
loc_dep <- 0.2 # above average residual correlation
dif_dif <- 0.5 # logits difference between groups in average item location (DIF)

### zstd is inflated with large samples (N > 500). Reduce sample size to jz and 
### run analysis yz random samples to get average ZSTD
jz = 300 # number to include in dataset
yz = 10 # number of random samples

# import item information
itemlabels2<-read_excel("C:/Users/magnuspjo/OneDrive - RISE/Dokument/Länsstyrelsen/Stockholmsenkäten2022/data/2022-08-22 SthlmsenkätenAllaItemsML.xls", sheet = 3)
itemlabels <- read.csv("C:/Users/magnuspjo/OneDrive - RISE/Dokument/Länsstyrelsen/Stockholmsenkäten2022/data/allitems.csv", fileEncoding = "UTF-8")

# import recoded data
# df <- read.csv("C:/Users/magnuspjo/OneDrive - RISE/Dokument/Länsstyrelsen/Stockholmsenkäten2022/data/SthlmsEnkat220405.csv", fileEncoding = "ISO-8859-1")
# df$X<-NULL
#df.all <- read_parquet("C:/Users/magnuspjo/OneDrive - RISE/Dokument/Länsstyrelsen/Stockholmsenkäten2022/data/2022-08-22 sthlmsenkat data.parquet")
df.all <- read_parquet("C:/Users/magnuspjo/OneDrive - RISE/Dokument/Länsstyrelsen/Stockholmsenkäten2022/data/2022-09-18 sthlmsenkat recoded responses.parquet")


# filter relevant variables
df <- df.all %>% 
  select(itemlabels2$itemnr,F67,F68,ar,Kön,ARSKURS,SkolSDO)

# 68. Tycker du att det är viktigt vad du kommer att jobba med när du blir stor eller spelar det ingen roll?
# df$F67<-recode(df$F67,"'Är mycket viktigt'=0;
#                'Är ganska viktigt'=1;
#                'Är varken viktigt eller oviktigt'=2;
#                'Spelar nästan ingen roll'=3;
#                'Spelar ingen roll alls'=4;
#                '<NA>'=NA",
#                as.factor=FALSE)
# 
# #  69. Om du jämför dina framtidsutsikter med de flesta andras i din ålder, tror du då att dina är sämre, lika bra
# # eller bättre?
# df$F68<-recode(df$F68,"'Mycket bättre'=0;
#                'Lite bättre'=1;
#                'Lika bra'=2;
#                'Lite sämre'=3;
#                'Mycket sämre'=4;
#                '<NA>'=NA",
#                as.factor=FALSE)

# create dataframe with 2016 (because of F67 and F68) data with all variables (post recode)
df.2016 <- df %>% 
  filter(ar == 2016) %>% 
  na.omit()
df.all.years<-df
df.omit.na <- df.2016
df.omit.na$ar <- NULL

# create DIF variables for gender and grade
dif.gender <- df.omit.na$Kön
df.omit.na$Kön <- NULL
dif.arskurs <- df.omit.na$ARSKURS
df.omit.na$ARSKURS <- NULL
dif.SkolSDO <- df.omit.na$SkolSDO
df.omit.na$SkolSDO <- NULL

# prepare for dif between years
df.dif.years <- df.all.years %>% 
  filter(ar %in% c(2016,2018,2020)) %>% 
  select(!Kön,!ARSKURS,!SkolSDO)

dif.year <- df.dif.years$ar
df.dif.years$ar <- NULL
# df.dif.years can later be used for DIF analysis of years

itemnr.new <- c("F67","F68")
item.new <- c("Tycker du att det är viktigt vad du kommer att jobba med när du blir stor eller spelar det ingen roll?","Om du jämför dina framtidsutsikter med de flesta andras i din ålder, tror du då att dina är sämre, lika bra
# eller bättre?")
item.index.new <- c("Framtidstro","Framtidstro")

itemlabels.new <- data.frame(itemnr.new,item.new,item.index.new)
names(itemlabels.new) <- c("itemnr","item","Index")

itemlabels<-rbind(itemlabels,itemlabels.new)

```

## Test att blanda items från olika domäner

Items F67 och F68 har bara data från 2016-2020, så vi använder 2016 som utgångspunkt i denna analys.

### Lista på items

```{r}
#| label: showitems

itemlabels %>% 
  filter(itemnr %in% names(df.omit.na)) %>% 
  formattable(align = c("l", "l","l"), 
              list(itemnr = formatter("span", style = ~style(color = "grey", 
      font.weight = "bold"))), 
      table.attr = "class=\"table table-striped\" style=\"font-size: 15px; font-family: Lato; width: 75%\"")


```

### Descriptives - item level

::: panel-tabset
#### Tile plot
```{r}
#| label: descriptives2
RItileplot(df.omit.na)
```
#### Barplots {.scrollable}
```{r}
#| label: alt-descriptives
#| layout-ncol: 2
for (i in 1:ncol(df.omit.na)) {
    barplot(table(df.omit.na[, i]), col = "#8dc8c7", main = names(df.omit.na[i]), 
      ylab = "Number of responses", xlab = (itemlabels %>% 
                                              filter(itemnr %in% names(df.omit.na)) 
                                            %>% .[i,2]))
  }
```
:::

## Rasch-parametrar

::: panel-tabset
### Item fit
```{r}
#| label: rasch1.fit

RIitemfitPCM2(df.omit.na)
```
### PCA
```{r}
#| label: rasch1.pca
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.omit.na)
```
### Residualkorrelationer
```{r}
#| label: rasch1.rcorr
RIresidcorr(df.omit.na, cutoff = 0.2)
```
### Targeting
```{r}
#| label: rasch1.targ
RItargeting(df.omit.na)
```
### Targeting sorterad
```{r}
#| label: rasch1.targs
df.erm<-PCM(df.omit.na)
plotPImap(df.erm, sorted = T)
```
### Loadings 1st contrast
```{r}
#| label: rasch1.load
RIloadLoc(df.omit.na)
```
### Analysis of response categories

```{r}
#| label: rasch1.cat
#| include: false
mirt.rasch <- mirt(df.omit.na, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
#| label: rasch1.catfig
plot(mirt.rasch, type="trace")
```
### Items
```{r}
#| label: rasch1.items
RIlistitems(df.omit.na)
```
:::

PCA av residualer tyder på smärre problem med multidimensionalitet. Items f86a c och F70 verkar bilda ett eget kluster, så vi tar bort dem och kör om analysen innan svarskategorier åtgärdas.

## Rasch-parametrar 2

```{r}
#| label: itemremoval1

removed.items <- c("F70","f86a","f86c")

df.omit.na <-df.omit.na %>% 
  select(!any_of(removed.items))

```


::: panel-tabset
### Item fit
```{r}
#| label: rasch2.fit

RIitemfitPCM2(df.omit.na)
```
### PCA
```{r}
#| label: rasch2.pca
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.omit.na)
```
### Residualkorrelationer
```{r}
#| label: rasch2.rcorr
RIresidcorr(df.omit.na, cutoff = 0.2)
```
### Targeting
```{r}
#| label: rasch2.targ
RItargeting(df.omit.na)
```
### Targeting sorterad
```{r}
#| label: rasch2.targs
df.erm<-PCM(df.omit.na)
plotPImap(df.erm, sorted = T)
```
### Loadings 1st contrast
```{r}
#| label: rasch2.load
RIloadLoc(df.omit.na)
```
### Analysis of response categories {.smaller}

```{r}
#| label: rasch2.cat
#| include: false
mirt.rasch <- mirt(df.omit.na, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
#| label: rasch2.catfig
plot(mirt.rasch, type="trace")
```
### Barplots {.scrollable}
```{r}
#| label: alt-descriptives2
#| layout-ncol: 2
for (i in 1:ncol(df.omit.na)) {
    barplot(table(df.omit.na[, i]), col = "#8dc8c7", main = names(df.omit.na[i]), 
      ylab = "Number of responses", xlab = (itemlabels %>% 
                                              filter(itemnr %in% names(df.omit.na)) 
                                            %>% .[i,2]))
  }
```
### Items
```{r}
#| label: rasch2.items
RIlistitems(df.omit.na)
```
:::

Vi behöver åtgärda problem med svarskategorier.

- F67 får de tre högsta kategorierna sammanslagna
- F68, f101k och f83c de två högsta

Residualkorrelationen mellan F92 och 96 är betydande. Vi tar samtidigt bort F96 pga tillför mindre i termer av targeting.

```{r}
#| label: omkodning

df.omit.na$F67 <- recode(df.omit.na$F67,"4=2;3=2", as.factor=F)
df.omit.na$F68 <- recode(df.omit.na$F68,"4=3", as.factor=F)

rcoded <- c("f101k","f83c")
for (i in rcoded) {
  df.omit.na[[i]]<-recode(df.omit.na[[i]],"3=2",as.factor=FALSE)
}

df.omit.na$F96 <- NULL

```

### Re-analysis of response categories {.smaller}

```{r}
#| label: rasch2.cat2
#| include: false
mirt.rasch <- mirt(df.omit.na, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
#| label: rasch2.catfig2
plot(mirt.rasch, type="trace")
```


## Rasch-parametrar 3

::: panel-tabset
### Item fit
```{r}
#| label: rasch3.fit

RIitemfitPCM2(df.omit.na)
```
### PCA
```{r}
#| label: rasch3.pca
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.omit.na)
```
### Residualkorrelationer
```{r}
#| label: rasch3.rcorr
RIresidcorr(df.omit.na, cutoff = 0.2)
```
### Targeting
```{r}
#| label: rasch3.targ
RItargeting(df.omit.na)
```
### Targeting sorterad
```{r}
#| label: rasch3.targs
df.erm<-PCM(df.omit.na)
plotPImap(df.erm, sorted = T)
```
### Loadings 1st contrast
```{r}
#| label: rasch3.load
RIloadLoc(df.omit.na)
```
### Items
```{r}
#| label: rasch3.items
RIlistitems(df.omit.na)
```
:::

Residualkorrelationer:

- f83e och h
- f101j och k
- f54b och n

Vi tar bort

- f83c
- f101k (aningen sämre targeting)
- f83h (samma)
- f54n (samma)

## Rasch-parametrar 4

::: panel-tabset
### Item fit
```{r}
#| label: rasch4.fit

removed.items <- c("F70","f86a","f86c","f83c","f101k","f83h","f54n")

df.omit.na <-df.omit.na %>% 
  select(!any_of(removed.items))

RIitemfitPCM2(df.omit.na)
```
### PCA
```{r}
#| label: rasch4.pca
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.omit.na)
```
### Residualkorrelationer
```{r}
#| label: rasch4.rcorr
RIresidcorr(df.omit.na, cutoff = 0.2)
```
### Targeting
```{r}
#| label: rasch4.targ
RItargeting(df.omit.na)
```
### Targeting sorterad
```{r}
#| label: rasch4.targs
df.erm<-PCM(df.omit.na)
plotPImap(df.erm, sorted = T)
```
### Reliability
```{r}
#| label: rasch4.tif
RItif(df.omit.na)
```
### Items
```{r}
#| label: rasch4.items
RIlistitems(df.omit.na)
```
:::

F99 är nära gränsvärdet 0.7 för MSQ, vilket inte är oväntat för en såpass övergripande fråga.

Reliabilitetskurvan (och targeting) visar att vi har en takeffekt som är ganska påtaglig, där ca 25% av respondenterna har högre nivå av "välbefinnande" (lägre poäng) än vad frågorna mäter. Så detta utgör inte något bra mått på välbefinnande i positiv bemärkelse, eftersom högre nivåer av välbefinnande inte kan mätas på ett adekvat sätt. Däremot kan dessa frågor fånga upp lägre nivåer av välbefinnande bättre, men frågan är vad vi använder ett sådant mått till?

## Rasch-parametrar 5 (3 item inlagda)

Vi provar att lägga till f86a, c, och F70 igen.

```{r}
#| label: setup2

removed.items2 <- c("f83c","f101k","f83h","f54n","F96")

df.omit.na <- df %>% 
  filter(ar == 2016) %>% 
  select(!any_of(c(removed.items2))) %>% 
  na.omit()

df.omit.na$F67 <- recode(df.omit.na$F67,"4=2;3=2", as.factor=F)
df.omit.na$F68 <- recode(df.omit.na$F68,"4=3", as.factor=F)

# create DIF variables for gender and grade
dif.gender <- df.omit.na$Kön
df.omit.na$Kön <- NULL
dif.arskurs <- df.omit.na$ARSKURS
df.omit.na$ARSKURS <- NULL
dif.SkolSDO <- df.omit.na$SkolSDO
df.omit.na$SkolSDO <- NULL
df.omit.na$ar <- NULL

```

::: panel-tabset
### Svarskategorier
```{r}
#| label: rasch5.cat
#| include: false
mirt.rasch <- mirt(df.omit.na, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
#| label: rasch5.catfig
plot(mirt.rasch, type="trace")
```
### Item fit
```{r}
#| label: rasch5.fit

RIitemfitPCM2(df.omit.na)
```
### PCA
```{r}
#| label: rasch5.pca
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.omit.na)
```
### Residualkorrelationer
```{r}
#| label: rasch5.rcorr
RIresidcorr(df.omit.na, cutoff = 0.2)
```
### Targeting
```{r}
#| label: rasch5.targ
RItargeting(df.omit.na)
```
### Targeting sorterad
```{r}
#| label: rasch5.targs
df.erm<-PCM(df.omit.na)
plotPImap(df.erm, sorted = T)
```
### Items
```{r}
#| label: rasch5.items
RIlistitems(df.omit.na)
```
:::

Item f86c ställer till problem med residualkorrelationer, och uppvisar problem med svarskategorier. Det senare gäller F70 i än större utsträckning

Vi tar bort f86c och kodar om F70 (0+1 och 1+2)

## Rasch-parametrar 6 (utan f86c)

::: panel-tabset
### Item fit
```{r}
#| label: rasch6.fit
df.omit.na$F70 <- recode(df.omit.na$F70,"1=0;2=1;3=1",as.factor=FALSE)
df.omit.na$f86c <- NULL

RIitemfitPCM2(df.omit.na)
```
### PCA
```{r}
#| label: rasch6.pca
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.omit.na)
```
### Residualkorrelationer
```{r}
#| label: rasch6.rcorr
RIresidcorr(df.omit.na, cutoff = 0.2)
```
### Targeting
```{r}
#| label: rasch6.targ
RItargeting(df.omit.na)
```
### Targeting sorterad
```{r}
#| label: rasch6.targs
df.erm<-PCM(df.omit.na)
plotPImap(df.erm, sorted = T)
```
### Reliability
```{r}
#| label: rasch6.tif
RItif(df.omit.na)
```
### Items
```{r}
#| label: rasch6.items
RIlistitems(df.omit.na)
```
:::

Vi har ett itempar som korrelerar lite för mycket, men såpass nära gränsvärdet att vi släpper det just nu.

## Invarians/DIF kön

::: panel-tabset
### Tabell
```{r}
#| label: difgender
#dif.gender<-recode(dif.gender,"'Pojke'=1;'Flicka'=2",as.factor=FALSE)

RIdifTable(df.omit.na, dif.gender)
```
### Figur
```{r}
#| label: difgender2
#| cache: true

RIdifFigure(df.omit.na, dif.gender)
```
:::

F92, "Hur mycket skulle du vilja ändra på dig själv?", uppvisar DIF nära gränsvärdet på 0.5 logits. I tabellen är 2 = pojke och 3 = flicka. Item F92 var också involverat i residualkorrelationen (med F99) strax över gränsvärdet. Det verkar rimligt att ta bort den, särskilt som targeting visar två trösklar väldigt nära varandra och på en plats där det finns många andra trösklar.

Två andra items ligger över 0.3.

## Rasch-parametrar 7 (utan F92)

::: panel-tabset
### Item fit
```{r}
#| label: rasch7.fit

df.omit.na$F92 <- NULL

RIitemfitPCM2(df.omit.na)
```
### PCA
```{r}
#| label: rasch7.pca
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.omit.na)
```
### Residualkorrelationer
```{r}
#| label: rasch7.rcorr
RIresidcorr(df.omit.na, cutoff = 0.2)
```
### Targeting
```{r}
#| label: rasch7.targ
RItargeting(df.omit.na)
```
### Targeting sorterad
```{r}
#| label: rasch7.targs
df.erm<-PCM(df.omit.na)
plotPImap(df.erm, sorted = T)
```
### Reliability
```{r}
#| label: rasch7.tif
RItif(df.omit.na)
```
### Items
```{r}
#| label: rasch7.items
RIlistitems(df.omit.na)
```
:::

## Invarians/DIF kön (utan F92)

::: panel-tabset
### Tabell
```{r}
#| label: difgender3
#dif.gender<-recode(dif.gender,"'Pojke'=1;'Flicka'=2",as.factor=FALSE)

RIdifTable(df.omit.na, dif.gender)
```
### Figur
```{r}
#| label: difgender3.2
#| cache: true

RIdifFigure(df.omit.na, dif.gender)
```
:::


## Invarians/DIF för årtal

Vi har enbart data från 2016, 2018 och 2020 för items F67 och F68, så vi avgränsar DIF-analysen till dessa årtal.

::: panel-tabset
### Tabell
```{r}
#| label: difyear1

df.dif.years$F67 <- recode(df.dif.years$F67,"4=2;3=2", as.factor=F)
df.dif.years$F68 <- recode(df.dif.years$F68,"4=3", as.factor=F)
df.dif.years$F70 <- recode(df.dif.years$F70,"1=0;2=1;3=1",as.factor=FALSE)

final.items <- names(df.omit.na)
itemlabels %>% 
  filter(itemnr %in% final.items) %>% 
  write_csv(file = "2022-09-20_VÄLBEFfinalitems.csv")
df.dif.years <- df.dif.years %>% 
  select(any_of(final.items))

RIdifTable(df.dif.years, dif.year)
```
### Figur
```{r}
#| label: difyear1.2

RIdifFigure(df.dif.years, dif.year)
```
:::

Items fungerar stabilt över tid för de tre mättillfällen som analyserats.

## Person location och infit ZSTD {.smaller}

```{r}
#| label: personfit1

RIpfit(df.omit.na)

```


## Item-parametrar
```{r}
#| label: itemparams

RIitemparams(na.omit(df.dif.years))
```


## Software used

```{r}
#| label: packagesv
pkgs <- cite_packages(cite.tidyverse = TRUE, 
                      output = "table",
                      bib.file = "grateful-refs.bib",
                      include.RStudio = TRUE)
formattable(pkgs, 
            table.attr = 'class=\"table table-striped\" style="font-size: 15px; font-family: Lato; width: 80%"')
```









